import numpy as np
import matplotlib.pyplot as plt
import math
import mpl_toolkits.mplot3d

def FD(Nx = 10, lx = [0.0, 1.0], Ny = 10, ly = [0.0, 1.0]):
	nx, ny = Nx+1, Ny+1
	mx, my = Nx-1, Ny-1
	hx, hy = (lx[1]-lx[0])/Nx, (ly[1]-ly[0])/Ny
	llx, lly = [], []
	a = np.zeros((Nx*Ny,Nx*Ny))
	u = np.zeros(ny*nx)
	y = 0
	for i in range(ny):
		x = 0
		for j in range(nx):
			llx.append(x)
			x = x+hx
			lly.append(y)
		y = y+hy
	for i in range(ny):
		u[nx*i], u[nx*i+Nx] = 0.0, 0.0
	for k in range(nx):
		u[k], u[nx*Ny+k] = 0.0, 0.0
	for i in range(my):
		for k in range(mx):
			a[i*mx+k][i*mx+k] = -2.0/hx**2-2.0/hy**2
			if i>0:
				a[i*mx+k][(i-1)*mx+k] = 1.0/hy**2
			if i<my:
				a[i*mx+k][(i+1)*mx+k] = 1.0/hy**2
			if k>0:
				a[i*mx+k][i*mx+k-1] = 1.0/hx**2
			if k<mx:
				a[i*mx+k][i*mx+k+1] = 1.0/hx**2
	b = np.linalg.eig(a)
	lu = []
	ld = []
	out = {}
	eig = b[0]
	for j in range(mx*my):
		for i in range(my):
			for k in range(mx):
				u[(i+1)*nx+k+1] = b[1][j][i*mx+k]
		lu.append(u)
		d = {}
		d['x'], d['y'], d['z'], d['m'], d['n'], d['eig'] = llx, lly, lu, nx, ny, b[0][j]
		ld.append(d)
	out['d'], out['eig'] = ld, eig
	return out

				
def trans(d):
	m, n = d['m'], d['n']
	lx = []
	ly = []
	lz = []
	k = 0
	for s in range(n):
		lx.append([])
		ly.append([])
		lz.append([])
	for i in range(n):
		for j in range(m):
			lx[i].append(d['x'][k])
			lz[i].append(d['z'][k])
			ly[i].append(d['y'][k])
			k = k+1
	dd = {}
	dd['x'], dd['y'], dd['z'] =  lx, ly, lz
	dd['m'], dd['n'] = m, n
	return dd





				
